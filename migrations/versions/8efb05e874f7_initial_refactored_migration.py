"""Initial refactored migration.

Revision ID: 8efb05e874f7
Revises:
Create Date: 2025-08-01 15:58:47.749266

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8efb05e874f7'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('product_classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('classification', sa.String(length=50), nullable=False),
    sa.Column('temperature', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_classes')),
    sa.UniqueConstraint('classification', name=op.f('uq_product_classes_classification'))
    )
    op.create_table('shipment_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('doc_ps', sa.String(length=100), nullable=True),
    sa.Column('doc_so', sa.String(length=100), nullable=True),
    sa.Column('doc_pl', sa.String(length=100), nullable=True),
    sa.Column('doc_consignment', sa.String(length=100), nullable=True),
    sa.Column('mov_code', sa.String(length=100), nullable=True, comment='Kode Movement dari ERP Pusat'),
    sa.Column('customer_id', sa.String(length=100), nullable=True),
    sa.Column('customer_name', sa.String(length=255), nullable=True),
    sa.Column('forwarding_name', sa.String(length=255), nullable=True),
    sa.Column('forwarding_address', sa.Text(), nullable=True),
    sa.Column('planned_ship_date', sa.Date(), nullable=True),
    sa.Column('actual_ship_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True, comment='PENDING, PACKING, READY_TO_SHIP, SHIPPED, DOCUMENTED'),
    sa.Column('merged_document_url', sa.String(length=512), nullable=True, comment='URL PDF gabungan dari Admin Office'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shipment_orders'))
    )
    op.create_table('shipments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ship_date', sa.Date(), nullable=False),
    sa.Column('doc_ps', sa.String(length=100), nullable=True),
    sa.Column('doc_pl', sa.String(length=100), nullable=True),
    sa.Column('doc_do', sa.String(length=100), nullable=True),
    sa.Column('doc_so', sa.String(length=100), nullable=True),
    sa.Column('doc_consignment', sa.String(length=100), nullable=True),
    sa.Column('erp_movement_code', sa.String(length=100), nullable=True),
    sa.Column('contract_no', sa.String(length=100), nullable=True),
    sa.Column('customer_id', sa.String(length=100), nullable=False),
    sa.Column('forwarding_name', sa.String(length=255), nullable=True),
    sa.Column('forwarding_address', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('shipment_type', sa.String(length=50), nullable=False, comment='e.g., REGULER, TENDER, CONSIGNMENT'),
    sa.Column('reference_id', sa.Integer(), nullable=False, comment='ID dari shipment_orders, tender_items, atau consignments'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shipments'))
    )
    with op.batch_alter_table('shipments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_shipments_reference_id'), ['reference_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_shipments_ship_date'), ['ship_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_shipments_shipment_type'), ['shipment_type'], unique=False)

    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('google_id', sa.String(length=255), nullable=True),
    sa.Column('nik', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('google_id', name=op.f('uq_users_google_id')),
    sa.UniqueConstraint('nik', name=op.f('uq_users_nik')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('warehouses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('erp_id', sa.String(length=50), nullable=False),
    sa.Column('building_name', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_warehouses')),
    sa.UniqueConstraint('erp_id', name=op.f('uq_warehouses_erp_id'))
    )
    op.create_table('packing_slips',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference_no', sa.String(length=100), nullable=False, comment='Nomor referensi unik untuk slip ini'),
    sa.Column('packer_code', sa.String(length=100), nullable=True),
    sa.Column('checker_staff', sa.String(length=100), nullable=True),
    sa.Column('shipment_order_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['shipment_order_id'], ['shipment_orders.id'], name=op.f('fk_packing_slips_shipment_order_id_shipment_orders')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_packing_slips')),
    sa.UniqueConstraint('reference_no', name=op.f('uq_packing_slips_reference_no')),
    sa.UniqueConstraint('shipment_order_id', name=op.f('uq_packing_slips_shipment_order_id'))
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('erp_id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('manufacturer', sa.String(length=255), nullable=True),
    sa.Column('nie', sa.String(length=100), nullable=False),
    sa.Column('product_class_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_class_id'], ['product_classes.id'], name=op.f('fk_products_product_class_id_product_classes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products')),
    sa.UniqueConstraint('erp_id', name=op.f('uq_products_erp_id'))
    )
    op.create_table('racks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rack_code', sa.String(length=50), nullable=False, comment='e.g., AA, BB, CC'),
    sa.Column('column_no', sa.String(length=50), nullable=False, comment='e.g., 1, 2, 3-8'),
    sa.Column('row_no', sa.String(length=50), nullable=False, comment='e.g., 1, 2, 3'),
    sa.Column('rack_identifier', sa.String(length=255), nullable=False, comment='warehouse_id-rack-kolom-baris'),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name=op.f('fk_racks_warehouse_id_warehouses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_racks')),
    sa.UniqueConstraint('rack_identifier', name=op.f('uq_racks_rack_identifier'))
    )
    op.create_table('packed_boxes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('box_number', sa.Integer(), nullable=False),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('packing_slip_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['packing_slip_id'], ['packing_slips.id'], name=op.f('fk_packed_boxes_packing_slip_id_packing_slips')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_packed_boxes'))
    )
    op.create_table('product_batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_number', sa.String(length=100), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('manufacture_date', sa.Date(), nullable=True),
    sa.Column('receipt_date', sa.Date(), nullable=True),
    sa.Column('receipt_qty', sa.Integer(), nullable=False),
    sa.Column('receipt_pic', sa.String(length=100), nullable=True),
    sa.Column('receipt_doc_url', sa.String(length=512), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('front_url', sa.String(length=255), nullable=True),
    sa.Column('right_url', sa.String(length=255), nullable=True),
    sa.Column('left_url', sa.String(length=255), nullable=True),
    sa.Column('back_url', sa.String(length=255), nullable=True),
    sa.Column('group_url', sa.String(length=255), nullable=True),
    sa.Column('leaflet_url', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_batches_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_batches')),
    sa.UniqueConstraint('batch_number', name=op.f('uq_product_batches_batch_number'))
    )
    op.create_table('product_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('het', sa.Float(), nullable=True),
    sa.Column('hna', sa.Float(), nullable=True),
    sa.Column('hjp', sa.Float(), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_prices_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_prices'))
    )
    op.create_table('consignments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('consignment_no', sa.String(length=100), nullable=False),
    sa.Column('customer_id', sa.String(length=100), nullable=False),
    sa.Column('product_batch_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total_value', sa.Float(), nullable=False),
    sa.Column('paid_amount', sa.Float(), nullable=False),
    sa.Column('remaining_value', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['product_batch_id'], ['product_batches.id'], name=op.f('fk_consignments_product_batch_id_product_batches')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_consignments')),
    sa.UniqueConstraint('consignment_no', name=op.f('uq_consignments_consignment_no'))
    )
    op.create_table('tenders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contract_no', sa.String(length=100), nullable=False),
    sa.Column('customer_id', sa.String(length=100), nullable=False),
    sa.Column('product_batch_id', sa.Integer(), nullable=False),
    sa.Column('total_qty', sa.Integer(), nullable=False),
    sa.Column('realized_qty', sa.Integer(), nullable=False),
    sa.Column('remaining_qty', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_batch_id'], ['product_batches.id'], name=op.f('fk_tenders_product_batch_id_product_batches')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tenders')),
    sa.UniqueConstraint('contract_no', name=op.f('uq_tenders_contract_no'))
    )
    op.create_table('stock_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('product_batch_id', sa.Integer(), nullable=False),
    sa.Column('rack_id', sa.Integer(), nullable=True, comment='NULL jika di palet'),
    sa.Column('tender_id', sa.Integer(), nullable=True),
    sa.Column('consignment_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False, comment='REGULER, ALLOCATED_TENDER, CONSIGNED'),
    sa.ForeignKeyConstraint(['consignment_id'], ['consignments.id'], name=op.f('fk_stock_locations_consignment_id_consignments')),
    sa.ForeignKeyConstraint(['product_batch_id'], ['product_batches.id'], name=op.f('fk_stock_locations_product_batch_id_product_batches')),
    sa.ForeignKeyConstraint(['rack_id'], ['racks.id'], name=op.f('fk_stock_locations_rack_id_racks')),
    sa.ForeignKeyConstraint(['tender_id'], ['tenders.id'], name=op.f('fk_stock_locations_tender_id_tenders')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stock_locations'))
    )
    with op.batch_alter_table('stock_locations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_stock_locations_status'), ['status'], unique=False)

    op.create_table('tender_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tender_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('destination', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False, comment='DITITIP, DIKIRIM'),
    sa.Column('racks_source', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['tender_id'], ['tenders.id'], name=op.f('fk_tender_items_tender_id_tenders')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tender_items'))
    )
    op.create_table('packed_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='Jumlah yang dimasukkan ke dalam box ini'),
    sa.Column('packed_box_id', sa.Integer(), nullable=True),
    sa.Column('stock_location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['packed_box_id'], ['packed_boxes.id'], name=op.f('fk_packed_items_packed_box_id_packed_boxes')),
    sa.ForeignKeyConstraint(['stock_location_id'], ['stock_locations.id'], name=op.f('fk_packed_items_stock_location_id_stock_locations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_packed_items'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('packed_items')
    op.drop_table('tender_items')
    with op.batch_alter_table('stock_locations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stock_locations_status'))

    op.drop_table('stock_locations')
    op.drop_table('tenders')
    op.drop_table('consignments')
    op.drop_table('product_prices')
    op.drop_table('product_batches')
    op.drop_table('packed_boxes')
    op.drop_table('racks')
    op.drop_table('products')
    op.drop_table('packing_slips')
    op.drop_table('warehouses')
    op.drop_table('users')
    with op.batch_alter_table('shipments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_shipments_shipment_type'))
        batch_op.drop_index(batch_op.f('ix_shipments_ship_date'))
        batch_op.drop_index(batch_op.f('ix_shipments_reference_id'))

    op.drop_table('shipments')
    op.drop_table('shipment_orders')
    op.drop_table('product_classes')
    # ### end Alembic commands ###
