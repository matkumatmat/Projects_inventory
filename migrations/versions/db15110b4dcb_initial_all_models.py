"""initial all models

Revision ID: db15110b4dcb
Revises: 
Create Date: 2025-07-31 01:11:03.792131

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'db15110b4dcb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allocation_types',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False, comment='Contoh: reguler, tender, swt'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_allocation_types')),
    sa.UniqueConstraint('name', name=op.f('uq_allocation_types_name'))
    )
    op.create_table('product_classes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('erp_id', sa.String(length=50), nullable=False),
    sa.Column('class_name', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_classes')),
    sa.UniqueConstraint('erp_id', name=op.f('uq_product_classes_erp_id'))
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('google_id', sa.String(length=255), nullable=True),
    sa.Column('nik', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email')),
    sa.UniqueConstraint('google_id', name=op.f('uq_users_google_id')),
    sa.UniqueConstraint('nik', name=op.f('uq_users_nik')),
    sa.UniqueConstraint('username', name=op.f('uq_users_username'))
    )
    op.create_table('warehouses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('erp_id', sa.String(length=50), nullable=False, comment='ID Gudang dari ERP'),
    sa.Column('building_name', sa.String(length=255), nullable=False, comment='Nama Gedung atau Lokasi'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_warehouses')),
    sa.UniqueConstraint('erp_id', name=op.f('uq_warehouses_erp_id'))
    )
    op.create_table('products',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('erp_id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('manufacturer', sa.String(length=255), nullable=True),
    sa.Column('product_class_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_class_id'], ['product_classes.id'], name=op.f('fk_products_product_class_id_product_classes')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products')),
    sa.UniqueConstraint('erp_id', name=op.f('uq_products_erp_id'))
    )
    op.create_table('racks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rack_identifier', sa.String(length=255), nullable=False, comment='ID unik rak, misal: 107-ccell-14-AA-1'),
    sa.Column('kolom', sa.String(length=50), nullable=True),
    sa.Column('baris', sa.String(length=50), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('properties', sa.JSON(), nullable=True, comment='Menyimpan detail rak lain yang tidak konsisten'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name=op.f('fk_racks_warehouse_id_warehouses')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_racks')),
    sa.UniqueConstraint('rack_identifier', name=op.f('uq_racks_rack_identifier'))
    )
    with op.batch_alter_table('racks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_racks_baris'), ['baris'], unique=False)
        batch_op.create_index(batch_op.f('ix_racks_kolom'), ['kolom'], unique=False)

    op.create_table('warehouse_product_class_association',
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('product_class_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_class_id'], ['product_classes.id'], name=op.f('fk_warehouse_product_class_association_product_class_id_product_classes')),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name=op.f('fk_warehouse_product_class_association_warehouse_id_warehouses')),
    sa.PrimaryKeyConstraint('warehouse_id', 'product_class_id', name=op.f('pk_warehouse_product_class_association'))
    )
    op.create_table('product_batches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('batch_number', sa.String(length=100), nullable=False),
    sa.Column('expiry_date', sa.Date(), nullable=True),
    sa.Column('manufacturing_date', sa.Date(), nullable=True),
    sa.Column('inbound_qty', sa.Integer(), nullable=True),
    sa.Column('outbound_qty', sa.Integer(), nullable=True),
    sa.Column('actual_stock', sa.Integer(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_batches_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_batches')),
    sa.UniqueConstraint('batch_number', name=op.f('uq_product_batches_batch_number'))
    )
    op.create_table('product_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('het', sa.Float(), nullable=True),
    sa.Column('hna', sa.Float(), nullable=True),
    sa.Column('hjp', sa.Float(), nullable=True),
    sa.Column('effective_date', sa.Date(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_product_prices_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_prices'))
    )
    op.create_table('allocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('allocation_code', sa.String(length=100), nullable=False, comment='Kode unik alokasi, misal: nomor kontrak'),
    sa.Column('total_quantity', sa.Integer(), nullable=False, comment='Total kuantitas untuk alokasi/kontrak ini'),
    sa.Column('product_batch_id', sa.Integer(), nullable=False),
    sa.Column('allocation_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['allocation_type_id'], ['allocation_types.id'], name=op.f('fk_allocations_allocation_type_id_allocation_types')),
    sa.ForeignKeyConstraint(['product_batch_id'], ['product_batches.id'], name=op.f('fk_allocations_product_batch_id_product_batches')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_allocations')),
    sa.UniqueConstraint('allocation_code', name=op.f('uq_allocations_allocation_code'))
    )
    op.create_table('product_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nie', sa.String(length=100), nullable=True),
    sa.Column('length', sa.Float(), nullable=True),
    sa.Column('width', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('product_batch_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_batch_id'], ['product_batches.id'], name=op.f('fk_product_details_product_batch_id_product_batches')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_details')),
    sa.UniqueConstraint('product_batch_id', name=op.f('uq_product_details_product_batch_id'))
    )
    op.create_table('product_docs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('front_url', sa.String(length=255), nullable=True),
    sa.Column('right_url', sa.String(length=255), nullable=True),
    sa.Column('left_url', sa.String(length=255), nullable=True),
    sa.Column('back_url', sa.String(length=255), nullable=True),
    sa.Column('group_url', sa.String(length=255), nullable=True),
    sa.Column('leaflet_url', sa.String(length=255), nullable=True),
    sa.Column('product_batch_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_batch_id'], ['product_batches.id'], name=op.f('fk_product_docs_product_batch_id_product_batches')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_product_docs')),
    sa.UniqueConstraint('product_batch_id', name=op.f('uq_product_docs_product_batch_id'))
    )
    op.create_table('allocation_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='Jumlah stok untuk tujuan ini'),
    sa.Column('destination', sa.String(length=255), nullable=True, comment='Nama tujuan, misal: RS A, Cabang B'),
    sa.Column('status', sa.String(length=50), nullable=False, comment='Status: DITITIP, DIKIRIM, DIPROSES'),
    sa.Column('allocation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['allocation_id'], ['allocations.id'], name=op.f('fk_allocation_details_allocation_id_allocations')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_allocation_details'))
    )
    op.create_table('stock_locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False, comment='Jumlah stok di lokasi spesifik ini'),
    sa.Column('allocation_detail_id', sa.Integer(), nullable=False),
    sa.Column('rack_id', sa.Integer(), nullable=True, comment='NULL jika stok masih di palet'),
    sa.ForeignKeyConstraint(['allocation_detail_id'], ['allocation_details.id'], name=op.f('fk_stock_locations_allocation_detail_id_allocation_details')),
    sa.ForeignKeyConstraint(['rack_id'], ['racks.id'], name=op.f('fk_stock_locations_rack_id_racks')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_stock_locations'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('stock_locations')
    op.drop_table('allocation_details')
    op.drop_table('product_docs')
    op.drop_table('product_details')
    op.drop_table('allocations')
    op.drop_table('product_prices')
    op.drop_table('product_batches')
    op.drop_table('warehouse_product_class_association')
    with op.batch_alter_table('racks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_racks_kolom'))
        batch_op.drop_index(batch_op.f('ix_racks_baris'))

    op.drop_table('racks')
    op.drop_table('products')
    op.drop_table('warehouses')
    op.drop_table('users')
    op.drop_table('product_classes')
    op.drop_table('allocation_types')
    # ### end Alembic commands ###
